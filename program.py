from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup  # type: ignore
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes  # type: ignore

# üîë –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "7427201359:AAHJ1MYYlK4XO9NDZd0GDj8JVMSoGcbJYcA"

# üîó –ö–∞–Ω–∞–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
CHANNEL_1_ID = -1002316570010  # ID –ø–µ—Ä–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ)
CHANNEL_2_USERNAME = "@odnorazzka"  # –Æ–∑–µ—Ä–Ω–µ–π–º –≤—Ç–æ—Ä–æ–≥–æ –∫–∞–Ω–∞–ª–∞
RESTRICTED_CHANNEL = "https://t.me/sex_v_marshrytke"  # –ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª

async def check_subscription(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    statuses = {}

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1-–π –∫–∞–Ω–∞–ª (–ø–æ chat_id)
    try:
        member1 = await context.bot.get_chat_member(CHANNEL_1_ID, user_id)
        statuses[CHANNEL_1_ID] = member1.status
    except Exception:
        statuses[CHANNEL_1_ID] = "error"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 2-–π –∫–∞–Ω–∞–ª (–ø–æ username)
    try:
        member2 = await context.bot.get_chat_member(CHANNEL_2_USERNAME, user_id)
        statuses[CHANNEL_2_USERNAME] = member2.status
    except Exception:
        statuses[CHANNEL_2_USERNAME] = "error"

    # üìä –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
    message_text = "<b>üì¢ –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã:</b>\n\n"
    for channel, status in statuses.items():
        channel_name = "–ö–∞–Ω–∞–ª 1" if channel == CHANNEL_1_ID else "–ö–∞–Ω–∞–ª 2"
        if status in ["creator", "administrator", "member"]:
            message_text += f"‚úÖ <b>{channel_name}</b>: –ü–æ–¥–ø–∏—Å–∞–Ω\n"
        elif status == "pending":
            message_text += f"‚åõ <b>{channel_name}</b>: –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞\n"
        else:
            message_text += f"‚ùå <b>{channel_name}</b>: –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω\n"

    # üîò –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
    keyboard = [
        [InlineKeyboardButton("üîó –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 1", url="https://t.me/+J_YT_F1TYBYyZTgy")],
        [InlineKeyboardButton("üîó –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª 2", url="https://t.me/odnorazzka")],
        [InlineKeyboardButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_sub")]
    ]

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –æ–±–∞ –∫–∞–Ω–∞–ª–∞ ‚Äì –≤—ã–¥–∞–µ–º –¥–æ—Å—Ç—É–ø
    if all(status in ["creator", "administrator", "member"] for status in statuses.values()):
        message_text += "\nüéâ –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –æ–±–∞ –∫–∞–Ω–∞–ª–∞! –í–æ—Ç –≤–∞—à –¥–æ—Å—Ç—É–ø:"
        keyboard = [[InlineKeyboardButton("üîû –ü–µ—Ä–µ–π—Ç–∏ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª", url=RESTRICTED_CHANNEL)]]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.effective_message.reply_text(message_text, parse_mode='HTML', reply_markup=reply_markup)

async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ 'üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'."""
    query = update.callback_query
    await query.answer()
    await check_subscription(update, context)  # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏

def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    
    app.add_handler(CommandHandler("start", check_subscription))
    app.add_handler(CallbackQueryHandler(button_click, pattern="^check_sub$"))

    app.run_polling()

if __name__ == "__main__":
    main()
